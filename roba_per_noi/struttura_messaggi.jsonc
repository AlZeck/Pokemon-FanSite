//METTERE QUI LO SCHEMA LOGICO DEL TIMING DELLE AZIONI E CONSEGUENZE


//IMPORTANTE: All'inizio della battaglia il server, dopo l'arrivo dei messaggi di inizializzazione manda ad entrambi l'azione "switch" per il loro primo pokemon della squadra


//STRUTTURA MESSAGGI DI INIZIALIZZAZIONE (client -> server)
{
    "utente": USERNAME,         //stringa indicante lo username dell'utente in questione ("CPU" per cpu)

    "squadra": [                //array indicante la squadra dell'utente in questione
        {
            "id": POKEMON_UNO,  //intero indicante id primo pokemon

            "mosse": [
                MOSSA_UNO,      //intero indicante id prima mossa
                MOSSA_DUE,      //intero indicante id seconda mossa
                MOSSA_TRE,      //intero indicante id terza mossa
                MOSSA_QUATTRO   //intero indicante id quarta mossa
            ]
        },

        {
            "id": POKEMON_DUE,  //intero indicante id secondo pokemon

            "mosse": [
                MOSSA_UNO,      //intero indicante id prima mossa
                MOSSA_DUE,      //intero indicante id seconda mossa
                MOSSA_TRE,      //intero indicante id terza mossa
                MOSSA_QUATTRO   //intero indicante id quarta mossa
            ]
        },

        {
            "id": POKEMON_TRE,  //intero indicante id terzo pokemon

            "mosse": [
                MOSSA_UNO,      //intero indicante id prima mossa
                MOSSA_DUE,      //intero indicante id seconda mossa
                MOSSA_TRE,      //intero indicante id terza mossa
                MOSSA_QUATTRO   //intero indicante id quarta mossa
            ]
        },

        {
            "id": POKEMON_QUATTRO,  //intero indicante id quarto pokemon

            "mosse": [
                MOSSA_UNO,      //intero indicante id prima mossa
                MOSSA_DUE,      //intero indicante id seconda mossa
                MOSSA_TRE,      //intero indicante id terza mossa
                MOSSA_QUATTRO   //intero indicante id quarta mossa
            ]
        },

        {
            "id": POKEMON_CINQUE,  //intero indicante id cinque pokemon

            "mosse": [
                MOSSA_UNO,      //intero indicante id prima mossa
                MOSSA_DUE,      //intero indicante id seconda mossa
                MOSSA_TRE,      //intero indicante id terza mossa
                MOSSA_QUATTRO   //intero indicante id quarta mossa
            ]
        },

        {
            "id": POKEMON_SEI,  //intero indicante id sesto pokemon

            "mosse": [
                MOSSA_UNO,      //intero indicante id prima mossa
                MOSSA_DUE,      //intero indicante id seconda mossa
                MOSSA_TRE,      //intero indicante id terza mossa
                MOSSA_QUATTRO   //intero indicante id quarta mossa
            ]
        }
    ]
}


//STRUTTURA MESSAGGI BATTAGLIA (client -> server)
{
    "utente": USERNAME,     //stringa indicante lo username dell'utente in questione ("CPU" per cpu)
    "azione": AZIONE,       //stringa indicante l'azione corrente: "mossa", "switch", "perso" o "attesa"
    "valore": VALORE        //intero indicante il valore dell'azione: id_mossa, id_pokemon, 0 per il resto
}


//STRUTTURA MESSAGGI BATTAGLIA (server -> client)
{
    "primo": {
            "utente": USERNAME,      //stringa indicante lo username dell'utente in questione ("CPU" per cpu)
            "azione": AZIONE,        //stringa indicante l'azione corrente: "mossa", "mossa_attesa", "mossa_esausto", "esausto", "switch", "switch_esausto", "perso", "vinto"
            "valore": VALORE,        //intero indicante il valore dell'azione: id_mossa (per le mosse), id_pokemon (per gli switch), 0 per il resto
            "danno": DANNO,          //intero indicante il danno inflitto in caso di mossa, 0 per il resto
            "messaggio": MESSAGGIO,  //stringa indicante il messaggio da associare e mostrare all'azione (ad esempio brutto colpo)
    },

    "secondo": {
            "utente": USERNAME,      //stringa indicante lo username dell'utente in questione ("CPU" per cpu)
            "azione": AZIONE,        //stringa indicante l'azione corrente: "mossa", "mossa_attesa", "mossa_esausto", "esausto", "switch", "switch_esausto", "perso", "vinto"
            "valore": VALORE,        //intero indicante il valore dell'azione: id_mossa (per le mosse), id_pokemon (per gli switch), 0 per il resto
            "danno": DANNO,          //intero indicante il danno in caso di mossa, 0 per il resto
            "messaggio": MESSAGGIO,  //stringa indicante il messaggio da associare e mostrare all'azione (ad esempio brutto colpo)
    }
}
